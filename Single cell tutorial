library(future)###设置核心数###
plan("multisession", workers = 30)#设置并行计算
options(future.globals.maxSize = 10000 * 1024^2)
#####先读取一些可能会用到的R包，避免后续报错-----
library(Seurat)
library(dplyr)
library(ggplot2)
library(magrittr)
library(gtools)
library(stringr)
library(Matrix)
library(tidyverse)
library(patchwork)
library(data.table)
library(RColorBrewer)
library(ggpubr)
library(ggsci)
library(SingleR)
library(CCA)
library(clustree)
library(cowplot)
library(monocle)
library(tidyverse)
library(SCpubr)
library(UCell)
library(irGSEA)
library(GSVA)
library(GSEABase)
library(harmony)
library(plyr)
#####1.读取单细胞数据-----
#####设置质控调控
library(dplyr)
library(Seurat)
library(ggplot2)
library(RColorBrewer)
library(DoubletFinder)
setwd("/home/qihang_yuan/20240618肾癌单细胞")
dataset_loc <- paste0(getwd(),"/data")    #此处改为自己的文件夹路径
setwd("/home/qihang_yuan/20240618肾癌单细胞/data")
samples=list.files(dataset_loc)
ids <- samples
ids
data1 = Read10X_h5(ids[1], use.names = T)
afcol=gsub(".h5","",ids[1])
afh5<-CreateSeuratObject(counts =data1, 
                         project = afcol, 
                         min.cells = 3,
                         min.features = 200)
afh5$Type=Idents(afh5)
afh5[["percent.mt"]] <- PercentageFeatureSet(afh5, pattern = "^MT-")
afh5[["percent.rb"]] <- PercentageFeatureSet(afh5, pattern = "^RP")
mask1 <- afh5$nCount_RNA >= 1000
mask2 <- afh5$nFeature_RNA >= 300 & afh5$nFeature_RNA <= 6000
mask3 <- afh5$percent.mt <= 20
# mask4<-af$percent.rb<= 20
mask <-mask1 & mask2 & mask3
afh5 <- afh5[, mask]
afh5_final<-afh5
#循环
for (affile in ids[2:length(ids)]){
  data1 = Read10X_h5(affile, use.names = T)
  afcol=gsub(".h5","",affile)
  #  colnames(data1)=rep(paste0(afcol,"-",1:length(colnames(data1))) )
  if(length(data1)==2){
    colnames(data1)<-paste0(colnames(data1),"_",afcol)
    afn<-CreateSeuratObject(counts = data1, 
                            project = afcol, 
                            min.cells = 3,
                            min.features = 200)
  }
  else{
    colnames(data1)<-paste0(colnames(data1),"_",afcol)
    afn<-CreateSeuratObject(counts = data1, 
                            project = afcol, 
                            min.cells = 3,
                            min.features = 200)
  }
  
  afn$Type=Idents(afn)
  afn[["percent.mt"]] <- PercentageFeatureSet(afn, pattern = "^MT-")
  afn[["percent.rb"]] <- PercentageFeatureSet(afn, pattern = "^RP")
  mask1 <- afn$nCount_RNA >= 1000
  mask2 <- afn$nFeature_RNA >= 300 & afn$nFeature_RNA <= 6000
  mask3 <- afn$percent.mt <= 20
  # mask4<-afn$percent.rb<= 20
  mask <-mask1 & mask2 & mask3
  afn <- afn[, mask]
  afh5_final=merge(afh5_final,afn)
}
GSE159115 <- afh5_final
rm(afh5)
rm(afh5_final)
rm(afn)
rm(data1)
###合并临床信息---
setwd("/home/qihang_yuan/20240618肾癌单细胞")
clinical=read.table("clinical.txt",sep="\t",header = T,
                    fileEncoding = 'utf-8',quote = '',
                    fill = T,check.names = F,row.names = 1)
index<-match(GSE159115@meta.data$Type,rownames(clinical))
GSE159115@meta.data$Disease<-clinical$Disease[index]
#102行代码.RData-
#####2.1 数据标准化，归一化，去除双细胞等质控-----
library(tidyverse)
library(Matrix)
library(stringr)
library(patchwork)
library(SingleR)
library(CCA)
library(clustree)
library(cowplot)
library(monocle)
library(tidyverse)
library(SCpubr)
library(UCell)
library(irGSEA)
library(GSVA)
library(GSEABase)
library(harmony)
library(plyr)
library(randomcoloR)
library(CellChat)
library(ggpubr)
library(DoubletFinder)
library(Seurat)
library(dplyr)
library(reticulate)
library(sctransform)
library(cowplot)
library(ggplot2)
library(viridis)
library(tidyr)
library(magrittr)
library(reshape2)
library(readxl)
library(progeny)
library(readr)
library(stringr)
##标准化,使用LogNormalize方法
af <- GSE159115
rm(GSE159115)
rm(clinical)
af <- NormalizeData(af, 
                    normalization.method = "LogNormalize", 
                    scale.factor = 10000)

## 鉴定高变基因
# 高变基因：在一些细胞中表达高，另一些细胞中表达低的基因
# 变异指标： mean-variance relationship
# 返回2000个高变基因，用于下游如PCA降维分析。
af <- FindVariableFeatures(af, selection.method = "vst", nfeatures = 2000)

# 提取前10的高变基因
top10 <- head(VariableFeatures(af), 10)
top10

# 展示高变基因
plot1 <- VariableFeaturePlot(af)
plot2 <- LabelPoints(plot = plot1, points = top10, repel = TRUE)

pdf(file = "01.topgene.pdf",width =7,height = 6)
plot2                   #plot_layout，patchwork函数，指定一行有几个图片
dev.off()

## 归一化
# 归一化处理：每一个基因在所有细胞中的均值变为0，方差标为1，对于降维来说是必需步骤
# 归一化后的值保存在：af[["RNA"]]@scale.data
# af <- ScaleData(af)

# 可以选择全部基因归一化
all.genes <- rownames(af)
af <- ScaleData(af, features = all.genes)

##########0.3.part3 降维(绘制原始分布)##########################
# PCA降维，用前面2000个高变基因，可以使用features改变用于降维的基因集
af <- Seurat::RunPCA(af, features = VariableFeatures(object = af))
af <- Seurat::RunTSNE(af,dims = 1:20)
# pdf(file = "02.rawtsne1.pdf",width =7.5,height = 5.5)
# DimPlot(af, reduction = "tsne", group.by="tissue_type",pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right") #top为图列位置最上方，除此之外还有right、left、bottom(意思同英文)
# dev.off()
# pdf(file = "02.rawtsne2.pdf",width =7.5,height = 5.5)
# DimPlot(af, reduction = "tsne",pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right") #top为图列位置最上方，除此之外还有right、left、bottom(意思同英文)
# dev.off()
# pdf(file = "02.rawpca1.pdf",width =7.5,height = 5.5)
# DimPlot(af, reduction = "pca", group.by="tissue_type",pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
# dev.off()
# pdf(file = "02.rawpca2.pdf",width =7.5,height = 5.5)
# DimPlot(af, reduction = "pca",pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
# dev.off()
# colaa=distinctColorPalette(100)
# pdf(file = "02.raw.tsne.split1.pdf",width =48,height =30)
# do_DimPlot(sample = af,
#            plot.title = "",
#            reduction = "tsne",
#            legend.position = "bottom",
#            dims = c(1,2),split.by = "Samples",pt.size =0.0001)
#选择展示的主成分，这边是PC2与PC1
# dev.off()
# pdf(file = "02.raw.tsne.split2.pdf",width =15,height =5.5)
# do_DimPlot(sample = af,
#            plot.title = "",
#            reduction = "tsne",
#            legend.position = "bottom",
#            dims = c(1,2),split.by = "tissue_type",pt.size =0.0001
# ) #选择展示的主成分，这边是PC2与PC1
# dev.off()

#####################################（选做 harmony 去批次与降维）################################################################################################
#####################################（选做 harmony 去批次与降维）################################################################################################
af <- RunHarmony(af, group.by.vars = "orig.ident")
#####231行代码.Rdata-----------
###########################################################################################################
#####################################################################
#######################################0.3.part3 矫正后结果可视化
#################################################################
# PCA降维，用前面1500个高变基因，可以使用features改变用于降维的基因集
# pdf(file = "03.harmony1.pdf",width =7.5,height = 5.5)
# DimPlot(af, reduction = "harmony", group.by="tissue_type",pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
# dev.off()
# pdf(file = "03.harmony2.pdf",width =7.5,height = 5.5)
# DimPlot(af, reduction = "harmony",pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
# dev.off()
af <- Seurat::RunTSNE(af,dims = 1:20,reduction ='harmony')
# pdf(file = "03.tsne1.pdf",width =7.5,height = 5.5)
# DimPlot(af, reduction = "tsne", group.by="tissue_type",pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
# dev.off()
# pdf(file = "03.tsne2.pdf",width =7.5,height = 5.5)
# DimPlot(af, reduction = "tsne",pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
# dev.off()
# collist=c(ggsci::pal_nejm()(20))   #20个样本所以是20种配色
# names(collist)=names(table(af$Samples))
# pdf(file = "03.tsne.split1.pdf",width =48,height = 30)
# do_DimPlot(sample = af,
#            plot.title = "",
#            reduction = "tsne",
#            legend.position = "bottom",
#            dims = c(1,2),split.by = "Samples",pt.size =0.001
# ) #选择展示的主成分，这边是PC2与PC1
# dev.off()
# pdf(file = "03.tsne.split2.pdf",width =15,height = 5.5)
# do_DimPlot(sample = af,
#            plot.title = "",
#            reduction = "tsne",
#            legend.position = "bottom",
#            dims = c(1,2),split.by = "tissue_type",pt.size =0.001
# ) #选择展示的主成分，这边是PC2与PC1
# dev.off()


#########################################################################################################################################
collist=c(ggsci::pal_nejm()(13))
#250行代码.RData-
# 前两个PC特征基因可视化
VizDimLoadings(af, dims = 1:2, reduction = "pca")
#热图可视化前15个PC
pdf(file = "04.pc_heatmap.pdf",width =7.5,height = 9)
DimHeatmap(af, dims = 1:20, cells = 1000, balanced = TRUE)
dev.off()
##确定使用PC个数
# each PC essentially representing a ‘metafeature’
###1415行代码.RData--
af <- JackStraw(af, num.replicate = 100)
af <- ScoreJackStraw(af, dims = 1:20)
pdf(file = "04.jackstrawplot.pdf",width =7.5,height = 5.5)
JackStrawPlot(af, dims = 1:20)
dev.off()
pdf(file = "04.ElbowPlot.pdf",width =5,height = 4)
ElbowPlot(af,ndims = 30,reduction = "harmony")
dev.off()
#选择PC
afPC=15
##对细胞聚类
# 首先基于PCA空间构建一个基于欧氏距离的KNN图
#af <- FindNeighbors(af, dims = 1:15)
#设置不同的分辨率，观察分群效果，dim为PCA选择的主成分数
af=FindNeighbors(af, dims = 1:afPC, reduction = "harmony")
for (res in c(0.01,0.05,0.1,0.2,0.5,0.8,1,1.2,1.5,2)) {
  af=FindClusters(af, graph.name = "RNA_snn", resolution = res, algorithm = 1)}
apply(af@meta.data[,grep("RNA_snn_res",colnames(af@meta.data))],2,table)

p2_tree=clustree(af@meta.data, prefix = "RNA_snn_res.")
pdf(file = "04.clustertree.pdf",width =12,height =12)
p2_tree
dev.off()
# 聚类并最优化
# resolution参数：值越大，细胞分群数越多，根据前面进行选择
# 0.4-1.2 typically returns good results for single-cell datasets of around 3K cells
# Optimal resolution often increases for larger datasets. 


#选择分辨率进行降维
af=FindNeighbors(af, dims = 1:afPC, reduction = "harmony")
af <- FindClusters(af, resolution = 1.5)

######315行代码.Rdata----------
# 查看聚类数ID
head(Idents(af), 5)

# 查看每个类别多少个细胞
head(af@meta.data)
table(af@meta.data$seurat_clusters)
# 鉴定各个细胞集群的标志基因only.pos：只保留上调差异表达的基因
af.markers <- FindAllMarkers(af, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
write.csv(af.markers,file = "05.cluster_markers.csv")

## 将细胞在低维空间可视化UMAP/tSNE
af <- RunUMAP(af, dims = 1:afPC, reduction = "harmony")
af <- RunTSNE(af, dims = 1:afPC, reduction = "harmony")

# 可视化UMAP/tSNE
pdf(file = "05-cluster.UMAP1.pdf",width =7,height = 5.5)
DimPlot(af, reduction = "umap", label = T, label.size = 3.5,pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
dev.off()
pdf(file = "05-cluster.UMAP2.pdf",width =7,height = 5.5)
DimPlot(af, reduction = "umap", group.by="Disease", label = T, label.size = 3.5,pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
dev.off()
pdf(file = "05-cluster.UMAP3.pdf",width =12,height = 5.5)
DimPlot(af, reduction = "umap",split.by = "Disease", label = T, label.size = 3.5,pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
dev.off()
pdf(file = "05-cluster.TSEN1.pdf",width =7,height = 5.5)
DimPlot(af, reduction = "tsne", label = T, label.size = 3.5,pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
dev.off()
pdf(file = "05-cluster.TSEN2.pdf",width =7,height = 5.5)
DimPlot(af, reduction = "tsne", group.by="Disease", label = T, label.size = 3.5,pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
dev.off()
pdf(file = "05-cluster.TSEN3.pdf",width =12,height = 5.5)
DimPlot(af, reduction = "tsne",split.by = "Disease", label = T, label.size = 3.5,pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
dev.off()
##########330行代码-----------

###########细胞注释------------------
gene.markers <- list("Epithelial cell" = c("KRT8","KRT18","CD24","EPCAM"),
                     "Myeloid cell" = c("CD68","CD14","CSF-1R"),
                     "Fibroblast cell" = c("TAGLN","RGS5", "MYL9","ACTA2"),
                     "T cell" = c("CD2","CD3D","CD3E","CD3G"),
                     "Endothelial cell" = c("ENG","PECAM1","VWF","CDH5"),
                     "NK cell" = c("NKG7","GNLY","KLRD1","CCL5"),
                     "B cell" = c("MS4A1","CD79A","CD79B"),
                     "Macrophage" = c("APOE","C1QA","C1QB","CD14"),
                     "DC" = c("CLEC10A","CD1C","CD1E","FCER1A"),
                     "Monocyte" = c("APOBEC3A","FCN1","S100A8","S100A9"),
                     "Erythrocyte" = c("HBG1","HBD","HBM")
                     
)
pdf(file = "06.ann_cluster_marker.pdf",width =20,height = 20)
do_DotPlot(sample = af,features = gene.markers,dot.scale = 12,colors.use = c("yellow","red"),legend.length = 50,
           legend.framewidth = 2, font.size =12)
dev.off()

####下面是细胞注释可以参考的代码，太麻烦了，本研究暂不注释
temp <- af@meta.data
temp$Cell_Type_new <- "none"
temp[temp$seurat_clusters %in% c(0,1,2,9,12,13,19,20,21,22,23,26),]$Cell_Type_new <- "Epithelial cell"
temp[temp$seurat_clusters %in% c(8,11,24,31),]$Cell_Type_new <- "Fibroblast cell"
temp[temp$seurat_clusters %in% c(7,18,25),]$Cell_Type_new <- "T/NK cell"
temp[temp$seurat_clusters %in% c(4,10,14,15,16,27,29),]$Cell_Type_new <- "Endothelial cell"
temp[temp$seurat_clusters %in% c(17),]$Cell_Type_new <- "B cell"
temp[temp$seurat_clusters %in% c(3,5,6,28,30),]$Cell_Type_new <- "Myeloid cell"

table(temp$Cell_Type_new)
af$Cell_Type <- temp$Cell_Type_new

##########根据注释好的细胞亚型将其展示到tsne和umap图上-------------
library(RColorBrewer)
display.brewer.all()
pdf(file = "06-scRNA.UMAP1.pdf",width =7,height = 5.5)
DimPlot(af, reduction = "umap", group.by = "Cell_Type", label = T,cols = brewer.pal(9,"Set1"),label.size = 3.5,pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
dev.off()
pdf(file = "06-scRNA.UMAP2.pdf",width =12,height = 5.5)
DimPlot(af, reduction = "umap", group.by = "Cell_Type", split.by = "Disease", label = T,cols = brewer.pal(9,"Set1"),label.size = 3.5,pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
dev.off()

tmpplot_umap = DimPlot(af, reduction = "umap", group.by = "Cell_Type", split.by = "Disease", label = T,cols = brewer.pal(9,"Set1"),label.size = 3.5,pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
tmpdf_umap = tmpplot_umap$data
library(RColorBrewer)
library(scales)
color_celltype=brewer.pal(9,"Set1")
names(color_celltype)=sort(unique(af@meta.data$cluster))

pdf(file = "06-scRNA.UMAP3.pdf",width =7,height = 5.5)
ggplot(tmpdf_umap, aes(x=UMAP_1,y=UMAP_2))+
  geom_point(aes(color=Cell_Type),alpha=0.5,shape=16, size = 0.8)+
  geom_density_2d(colour = "black",alpha=0.7,bins = 10)+
  scale_color_manual(values = color_celltype)+
  scale_x_continuous(expand = c(0,0))+
  scale_y_continuous(expand = c(0,0))+
  theme_bw()+
  theme(
    panel.grid = element_blank(),
    axis.ticks = element_blank(),
    axis.text = element_blank(),
    axis.title = element_blank()
  )+
  guides(color = guide_legend(override.aes = list(size = 3)))
dev.off()

pdf(file = "06-scRNA.TSEN1.pdf",width =7,height = 5.5)
DimPlot(af, reduction = "tsne", group.by = "Cell_Type", label = T,cols = brewer.pal(9,"Set1"),label.size = 3.5,pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
dev.off()
pdf(file = "06-scRNA.TSEN2.pdf",width =12,height = 5.5)
DimPlot(af, reduction = "tsne", group.by = "Cell_Type", split.by = "Disease", label = T,cols = brewer.pal(9,"Set1"),label.size = 3.5,pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
dev.off()

tmpplot_tsne = DimPlot(af, reduction = "tsne", group.by = "Cell_Type", split.by = "Disease", label = T,cols = brewer.pal(9,"Set1"),label.size = 3.5,pt.size = 0.0001)+theme_classic()+theme(panel.border = element_rect(fill=NA,color="black", size=0.5, linetype="solid"),legend.position = "right")
tmpdf_tsne = tmpplot_tsne$data

pdf(file = "06-scRNA.TSNE3.pdf",width =7,height = 5.5)
ggplot(tmpdf_tsne, aes(x=tSNE_1,y=tSNE_2))+
  geom_point(aes(color=Cell_Type),alpha=0.5,shape=16, size = 0.8)+
  geom_density_2d(colour = "black",alpha=0.7,bins = 10)+
  scale_color_manual(values = color_celltype)+
  scale_x_continuous(expand = c(0,0))+
  scale_y_continuous(expand = c(0,0))+
  theme_bw()+
  theme(
    panel.grid = element_blank(),
    axis.ticks = element_blank(),
    axis.text = element_blank(),
    axis.title = element_blank()
  )+
  guides(color = guide_legend(override.aes = list(size = 6)))
dev.off()

gene.markers <- list("Epithelial cell" = c("KRT8","KRT18","CD24","EPCAM"),
                     "Fibroblast cell" = c("TAGLN","RGS5", "MYL9","ACTA2"),
                     "T/NK cell" = c("CD2","CD3D","CD3E","CD3G","NKG7","GNLY","KLRD1","CCL5"),
                     "Endothelial cell" = c("ENG","PECAM1","VWF","CDH5"),
                     "B cell" = c("MS4A1","CD79A","CD79B"),
                     "Myeloid cell" = c("CD68","CD14","CSF-1R")
                     
)
Idents(af) <- af$Cell_Type
af$Cell_Type <- factor(af$Cell_Type,
                       levels = c("Endothelial cell",
                                  "B cell",
                                  "Fibroblast cell",
                                  "T/NK cell",
                                  "Epithelial cell",
                                  "Myeloid cell"))
pdf(file = "07.ann_cell_marker.pdf",width =17,height = 6)
do_DotPlot(sample = af,features = gene.markers,dot.scale = 12,colors.use = c("yellow","red"),legend.length = 50,
           legend.framewidth = 2, font.size =12)
dev.off()
###446行代码
# only.pos：只保留上调差异表达的基因
Idents(af) <- af$Cell_Type
af.markers <- FindAllMarkers(af, only.pos = F, min.pct = 0.25, logfc.threshold = 0.25)
write.csv(af.markers,file = "07.cell_markers.csv")

